using JLD2
using SPICE
using GRASS
using Revise
using CSV
using DataFrames

GRASS.get_kernels()

function set_geometry(time, obs_lat, obs_long, alt, N, filename)
    # convert from utc to et as needed by SPICE
    time_stamps = collect(time)

    Nt = length(time_stamps)
    disk = GRASS.DiskParamsEclipse(N=N, Nt=Nt, Nsubgrid=10)

    wsp = GRASS.SynthWorkspaceEclipse(disk, 1, Nt, verbose=true)
    mem = GRASS.GeoWorkspaceEclipse(disk, 1, Nt)

    mu_grid_eclipse = Vector{Matrix{Matrix{Float64}}}(undef,size(time_stamps)...)
    dA_total_proj_eclipse = Vector{Matrix{Matrix{Float64}}}(undef,size(time_stamps)...)
    idx1_eclipse = Vector{Matrix{Matrix{Int}}}(undef,size(time_stamps)...)
    idx3_eclipse = Vector{Matrix{Matrix{Int}}}(undef,size(time_stamps)...)
    z_rot_eclipse = Vector{Matrix{Matrix{Float64}}}(undef,size(time_stamps)...)
    zenith_eclipse = Vector{Matrix{Matrix{Float64}}}(undef,size(time_stamps)...)

    mu_grid_matrix = Matrix{Matrix{Float64}}(undef, length(disk.ϕc), maximum(disk.Nθ))    
    dA_total_proj_matrix = Matrix{Matrix{Float64}}(undef, length(disk.ϕc), maximum(disk.Nθ))
    idx1_matrix = Matrix{Matrix{Int}}(undef, length(disk.ϕc), maximum(disk.Nθ))
    idx3_matrix = Matrix{Matrix{Int}}(undef, length(disk.ϕc), maximum(disk.Nθ))
    z_rot_matrix = Matrix{Matrix{Float64}}(undef, length(disk.ϕc), maximum(disk.Nθ))
    zenith_matrix = Matrix{Matrix{Float64}}(undef, length(disk.ϕc), maximum(disk.Nθ))

    Threads.@threads for t in 1:disk.Nt
        # compute geometry for timestamp
        GRASS.eclipse_compute_quantities!(disk, time_stamps[t], t, obs_long, obs_lat, alt, wsp.ϕc, wsp.θc, 
                                            wsp.μs, wsp.z_rot, wsp.dA, wsp.xyz, wsp.ax_codes,
                                            mem.dA_total_proj_mean, mem.mean_weight_v_no_cb,
                                            mem.mean_weight_v_earth_orb, mem.pole_vector_grid,
                                            mem.SP_sun_pos, mem.SP_sun_vel, mem.SP_bary, mem.SP_bary_pos,
                                            mem.SP_bary_vel, mem.OP_bary, mem.EuP_bary, mem.mu_grid, mem.projected_velocities_no_cb, 
                                            mem.distance, mem.v_scalar_grid, mem.v_earth_orb_proj, mu_grid_matrix,
                                            dA_total_proj_matrix, idx1_matrix, idx3_matrix, z_rot_matrix, zenith_matrix)
        mu_grid_eclipse[t] = deepcopy(mu_grid_matrix)
        dA_total_proj_eclipse[t] = deepcopy(dA_total_proj_matrix)
        idx1_eclipse[t] = deepcopy(idx1_matrix)
        idx3_eclipse[t] = deepcopy(idx3_matrix)
        z_rot_eclipse[t] = deepcopy(z_rot_matrix)
        zenith_eclipse[t] = deepcopy(zenith_matrix)
    end

    @save "data/solar_disk/$(filename).jld2"
    jldopen("data/solar_disk/$(filename).jld2", "a+") do file
        file["dA_total_proj_mean"] = deepcopy(mem.dA_total_proj_mean)
        file["mean_weight_v_no_cb"] = deepcopy(mem.mean_weight_v_no_cb)
        file["mean_weight_v_earth_orb"] = deepcopy(mem.mean_weight_v_earth_orb)
        file["mu_grid"] = deepcopy(mu_grid_eclipse)
        file["dA_total_proj"] = deepcopy(dA_total_proj_eclipse)
        file["idx1"] = deepcopy(idx1_eclipse)
        file["zenith"] = deepcopy(zenith_eclipse)
        file["idx3"] = deepcopy(idx3_eclipse)
        file["mu"] = deepcopy(wsp.μs)
        file["dA"] = deepcopy(wsp.dA)
        file["ax_codes"] = deepcopy(wsp.ax_codes)
        file["z_rot_sub"] = deepcopy(z_rot_eclipse)
        file["N"] = N
    end
end

function neid_october_eclipse()
    neid_october = ["2023-10-14T15:26:45.500000", "2023-10-14T15:28:07.500000", "2023-10-14T15:29:30.500000", "2023-10-14T15:30:53.500000", "2023-10-14T15:32:15.500000", "2023-10-14T15:33:38.500000", "2023-10-14T15:35:01.500000", "2023-10-14T15:36:23.500000", "2023-10-14T15:37:46.500000", "2023-10-14T15:39:09.500000", "2023-10-14T15:40:31.500000", "2023-10-14T15:41:54.500000", "2023-10-14T15:43:17.500000", "2023-10-14T15:44:39.500000", "2023-10-14T15:46:02.500000", "2023-10-14T15:47:25.500000", "2023-10-14T15:48:47.500000", "2023-10-14T15:50:10.500000", "2023-10-14T15:51:33.500000", "2023-10-14T15:52:56.500000", "2023-10-14T15:54:18.500000", "2023-10-14T15:55:41.500000", "2023-10-14T15:57:04.500000", "2023-10-14T15:58:26.500000", "2023-10-14T15:59:49.500000", "2023-10-14T16:01:12.500000", "2023-10-14T16:02:34.500000", "2023-10-14T16:03:57.500000", "2023-10-14T16:05:20.500000", "2023-10-14T16:06:42.500000", "2023-10-14T16:08:05.500000", "2023-10-14T16:09:28.500000", "2023-10-14T16:10:50.500000", "2023-10-14T16:12:13.500000", "2023-10-14T16:13:36.500000", "2023-10-14T16:14:58.500000", "2023-10-14T16:16:21.500000", "2023-10-14T16:17:44.500000", "2023-10-14T16:19:06.500000", "2023-10-14T16:20:29.500000", "2023-10-14T16:21:52.500000", "2023-10-14T16:23:15.500000", "2023-10-14T16:24:37.500000", "2023-10-14T16:26:00.500000", "2023-10-14T16:27:23.500000", "2023-10-14T16:28:45.500000", "2023-10-14T16:30:08.500000", "2023-10-14T16:31:31.500000", "2023-10-14T16:32:53.500000", "2023-10-14T16:34:16.500000", "2023-10-14T16:35:39.500000", "2023-10-14T16:37:01.500000", "2023-10-14T16:38:24.500000", "2023-10-14T16:39:47.500000", "2023-10-14T16:41:09.500000", "2023-10-14T16:42:32.500000", "2023-10-14T16:43:55.500000", "2023-10-14T16:45:17.500000", "2023-10-14T16:46:40.500000", "2023-10-14T16:48:03.500000", "2023-10-14T16:49:25.500000", "2023-10-14T16:50:48.500000", "2023-10-14T16:52:11.500000", "2023-10-14T16:53:33.500000", "2023-10-14T16:54:56.500000", "2023-10-14T16:56:19.500000", "2023-10-14T16:57:42.500000", "2023-10-14T16:59:04.500000", "2023-10-14T17:00:27.500000", "2023-10-14T17:01:50.500000", "2023-10-14T17:03:12.500000", "2023-10-14T17:04:35.500000", "2023-10-14T17:05:58.500000", "2023-10-14T17:07:20.500000", "2023-10-14T17:08:43.500000", "2023-10-14T17:10:06.500000", "2023-10-14T17:11:28.500000", "2023-10-14T17:12:51.500000", "2023-10-14T17:14:14.500000", "2023-10-14T17:15:36.500000", "2023-10-14T17:16:59.500000", "2023-10-14T17:18:22.500000", "2023-10-14T17:19:44.500000", "2023-10-14T17:21:07.500000", "2023-10-14T17:22:30.500000", "2023-10-14T17:23:52.500000", "2023-10-14T17:25:15.500000", "2023-10-14T17:26:38.500000", "2023-10-14T17:28:01.500000", "2023-10-14T17:29:23.500000", "2023-10-14T17:30:46.500000", "2023-10-14T17:32:09.500000", "2023-10-14T17:33:31.500000", "2023-10-14T17:34:54.500000", "2023-10-14T17:36:17.500000", "2023-10-14T17:37:39.500000", "2023-10-14T17:39:02.500000", "2023-10-14T17:40:25.500000", "2023-10-14T17:41:47.500000", "2023-10-14T17:43:10.500000", "2023-10-14T17:44:33.500000", "2023-10-14T17:45:55.500000", "2023-10-14T17:47:18.500000", "2023-10-14T17:48:41.500000", "2023-10-14T17:50:03.500000", "2023-10-14T17:51:26.500000", "2023-10-14T17:52:49.500000", "2023-10-14T17:54:11.500000", "2023-10-14T17:55:34.500000", "2023-10-14T17:56:57.500000", "2023-10-14T17:58:20.500000", "2023-10-14T17:59:42.500000", "2023-10-14T18:01:05.500000", "2023-10-14T18:02:28.500000", "2023-10-14T18:03:50.500000", "2023-10-14T18:05:13.500000", "2023-10-14T18:06:36.500000", "2023-10-14T18:07:58.500000", "2023-10-14T18:09:21.500000", "2023-10-14T18:10:44.500000", "2023-10-14T18:12:06.500000", "2023-10-14T18:13:29.500000", "2023-10-14T18:14:52.500000", "2023-10-14T18:16:14.500000", "2023-10-14T18:17:37.500000", "2023-10-14T18:19:00.500000", "2023-10-14T18:20:22.500000", "2023-10-14T18:21:45.500000", "2023-10-14T18:23:08.500000", "2023-10-14T18:24:30.500000", "2023-10-14T18:25:53.500000", "2023-10-14T18:27:16.500000", "2023-10-14T18:28:38.500000", "2023-10-14T18:30:01.500000", "2023-10-14T18:31:24.500000", "2023-10-14T18:32:47.500000", "2023-10-14T18:34:09.500000", "2023-10-14T18:35:32.500000", "2023-10-14T18:36:55.500000", "2023-10-14T18:38:17.500000", "2023-10-14T18:39:40.500000", "2023-10-14T18:41:03.500000", "2023-10-14T18:42:25.500000", "2023-10-14T18:43:48.500000", "2023-10-14T18:45:11.500000", "2023-10-14T18:46:33.500000", "2023-10-14T18:47:56.500000", "2023-10-14T18:49:19.500000", "2023-10-14T18:50:41.500000", "2023-10-14T18:52:04.500000", "2023-10-14T18:53:27.500000", "2023-10-14T18:54:49.500000", "2023-10-14T18:56:12.500000", "2023-10-14T18:57:35.500000", "2023-10-14T18:58:57.500000", "2023-10-14T19:00:20.500000", "2023-10-14T19:01:43.500000", "2023-10-14T19:03:06.500000"]

    # NEID location
    obs_lat = 31.9583 
    obs_long = -111.5967  
    alt = 2.097938 

    set_geometry(neid_october, obs_lat, obs_long, alt, 50, "neid_october_N_50")
end

function neid_october_nxt_day()
    neid_1015 = ["2023-10-15T16:33:02.500", "2023-10-15T16:34:25.500", "2023-10-15T16:35:48.500", "2023-10-15T16:37:10.500", "2023-10-15T16:38:33.500", "2023-10-15T16:39:56.500", "2023-10-15T16:41:18.500", "2023-10-15T16:42:41.500", "2023-10-15T16:44:04.500", "2023-10-15T16:45:26.500", "2023-10-15T16:46:49.500", "2023-10-15T16:48:12.500", "2023-10-15T16:49:34.500", "2023-10-15T16:50:57.500", "2023-10-15T16:52:20.500", "2023-10-15T16:53:42.500", "2023-10-15T16:55:05.500", "2023-10-15T16:56:28.500", "2023-10-15T16:57:50.500", "2023-10-15T16:59:13.500", "2023-10-15T17:00:36.500", "2023-10-15T17:01:59.500", "2023-10-15T17:03:21.500", "2023-10-15T17:04:44.500", "2023-10-15T17:06:07.500", "2023-10-15T17:07:29.500", "2023-10-15T17:08:52.500", "2023-10-15T17:10:15.500", "2023-10-15T17:11:37.500", "2023-10-15T17:13:00.500", "2023-10-15T17:14:23.500", "2023-10-15T17:15:45.500", "2023-10-15T17:17:08.500", "2023-10-15T17:18:31.500", "2023-10-15T17:19:53.500", "2023-10-15T17:21:16.500", "2023-10-15T17:22:39.500", "2023-10-15T17:24:01.500", "2023-10-15T17:25:24.500", "2023-10-15T17:26:47.500", "2023-10-15T17:28:09.500", "2023-10-15T17:29:32.500", "2023-10-15T17:30:55.500", "2023-10-15T17:32:18.500", "2023-10-15T17:33:40.500", "2023-10-15T17:35:03.500", "2023-10-15T17:36:26.500", "2023-10-15T17:37:48.500", "2023-10-15T17:39:11.500", "2023-10-15T17:40:34.500", "2023-10-15T17:41:56.500", "2023-10-15T17:43:19.500", "2023-10-15T17:44:42.500", "2023-10-15T17:46:04.500", "2023-10-15T17:47:27.500", "2023-10-15T17:48:50.500", "2023-10-15T17:50:12.500", "2023-10-15T17:51:35.500", "2023-10-15T17:52:58.500", "2023-10-15T17:54:20.500", "2023-10-15T17:57:10.500", "2023-10-15T17:58:33.500", "2023-10-15T17:59:55.500", "2023-10-15T18:01:18.500", "2023-10-15T18:02:41.500", "2023-10-15T18:04:03.500", "2023-10-15T18:05:26.500", "2023-10-15T18:06:49.500", "2023-10-15T18:08:11.500", "2023-10-15T18:09:34.500", "2023-10-15T18:10:57.500", "2023-10-15T18:12:19.500", "2023-10-15T18:13:42.500", "2023-10-15T18:15:05.500", "2023-10-15T18:16:27.500", "2023-10-15T18:17:50.500", "2023-10-15T18:19:13.500", "2023-10-15T18:20:35.500", "2023-10-15T18:21:58.500", "2023-10-15T18:23:21.500", "2023-10-15T18:24:44.500", "2023-10-15T18:26:06.500", "2023-10-15T18:27:29.500", "2023-10-15T18:28:52.500", "2023-10-15T18:30:14.500", "2023-10-15T18:31:37.500", "2023-10-15T18:33:00.500", "2023-10-15T18:34:22.500", "2023-10-15T18:35:45.500", "2023-10-15T18:37:08.500", "2023-10-15T18:38:30.500", "2023-10-15T18:39:53.500", "2023-10-15T18:41:16.500", "2023-10-15T18:42:38.500", "2023-10-15T18:44:01.500", "2023-10-15T18:45:24.500", "2023-10-15T18:46:46.500", "2023-10-15T18:48:09.500", "2023-10-15T18:49:32.500", "2023-10-15T18:50:54.500", "2023-10-15T18:52:17.500", "2023-10-15T18:53:40.500", "2023-10-15T18:55:03.500", "2023-10-15T18:56:25.500", "2023-10-15T18:57:48.500", "2023-10-15T18:59:11.500", "2023-10-15T19:00:33.500", "2023-10-15T19:01:56.500", "2023-10-15T19:03:19.500", "2023-10-15T19:04:41.500", "2023-10-15T19:06:04.500"]

    # NEID location
    obs_lat = 31.9583 
    obs_long = -111.5967  
    alt = 2.097938 

    set_geometry(neid_1015, obs_lat, obs_long, alt, 50, "neid_october_N_50_nxt_day")
end

function boulder_october_eclipse()
    boulder_october = ["2023-10-14T13:25:37", "2023-10-14T13:27:01", "2023-10-14T13:28:23", "2023-10-14T13:29:42", "2023-10-14T13:31:08", "2023-10-14T13:32:25", "2023-10-14T13:33:49", "2023-10-14T13:35:10", "2023-10-14T13:36:33", "2023-10-14T13:37:56", "2023-10-14T13:39:18", "2023-10-14T13:40:37", "2023-10-14T13:42:01", "2023-10-14T13:43:22", "2023-10-14T13:44:46", "2023-10-14T13:46:09", "2023-10-14T13:47:26", "2023-10-14T13:48:50", "2023-10-14T13:50:14", "2023-10-14T13:51:38", "2023-10-14T13:52:57", "2023-10-14T13:53:55", "2023-10-14T13:59:00", "2023-10-14T13:59:41", "2023-10-14T14:03:04", "2023-10-14T14:03:20", "2023-10-14T14:05:15", "2023-10-14T14:06:34", "2023-10-14T14:12:22", "2023-10-14T14:13:27", "2023-10-14T14:14:48", "2023-10-14T14:16:12", "2023-10-14T14:17:34", "2023-10-14T14:18:56", "2023-10-14T14:20:20", "2023-10-14T14:21:44", "2023-10-14T14:23:02", "2023-10-14T14:24:24", "2023-10-14T14:25:45", "2023-10-14T14:27:10", "2023-10-14T14:28:32", "2023-10-14T14:29:50", "2023-10-14T14:31:13", "2023-10-14T14:32:34", "2023-10-14T14:33:59", "2023-10-14T14:35:21", "2023-10-14T14:36:18", "2023-10-14T15:38:31", "2023-10-14T15:39:34", "2023-10-14T15:40:55", "2023-10-14T15:42:19", "2023-10-14T15:43:37", "2023-10-14T15:44:42", "2023-10-14T15:46:30", "2023-10-14T15:47:48", "2023-10-14T15:49:10", "2023-10-14T15:50:31", "2023-10-14T15:51:53", "2023-10-14T15:53:14", "2023-10-14T15:54:37", "2023-10-14T15:55:59", "2023-10-14T15:57:21", "2023-10-14T15:58:40", "2023-10-14T16:00:04", "2023-10-14T16:01:28", "2023-10-14T16:02:49", "2023-10-14T16:04:11", "2023-10-14T16:05:32", "2023-10-14T16:06:54", "2023-10-14T16:08:18", "2023-10-14T16:09:39", "2023-10-14T16:11:01", "2023-10-14T16:12:25", "2023-10-14T16:13:46", "2023-10-14T16:15:08", "2023-10-14T16:16:27", "2023-10-14T16:17:50", "2023-10-14T16:19:14", "2023-10-14T16:20:36", "2023-10-14T16:21:57", "2023-10-14T16:23:19", "2023-10-14T16:24:40", "2023-10-14T16:26:04", "2023-10-14T16:27:26", "2023-10-14T16:28:47", "2023-10-14T16:30:09", "2023-10-14T16:31:32", "2023-10-14T16:32:54", "2023-10-14T16:34:16", "2023-10-14T16:35:37", "2023-10-14T16:36:58", "2023-10-14T16:39:52", "2023-10-14T16:41:05", "2023-10-14T16:42:32", "2023-10-14T16:43:51", "2023-10-14T16:45:12", "2023-10-14T16:46:23", "2023-10-14T16:48:03", "2023-10-14T16:49:17", "2023-10-14T16:50:42", "2023-10-14T16:51:58", "2023-10-14T16:53:24", "2023-10-14T16:54:45", "2023-10-14T16:56:06", "2023-10-14T16:57:31", "2023-10-14T16:58:53", "2023-10-14T17:00:13", "2023-10-14T17:01:35", "2023-10-14T17:02:56", "2023-10-14T17:04:20", "2023-10-14T17:05:42", "2023-10-14T17:07:03", "2023-10-14T17:08:27", "2023-10-14T17:09:49", "2023-10-14T17:11:10", "2023-10-14T17:12:32", "2023-10-14T17:13:53", "2023-10-14T17:15:17", "2023-10-14T17:16:39", "2023-10-14T17:18:00", "2023-10-14T17:19:21", "2023-10-14T17:20:43", "2023-10-14T17:22:07", "2023-10-14T17:23:28", "2023-10-14T17:24:50", "2023-10-14T17:26:12", "2023-10-14T17:27:33", "2023-10-14T17:28:41", "2023-10-14T18:41:52", "2023-10-14T18:42:46", "2023-10-14T18:44:08", "2023-10-14T18:45:29", "2023-10-14T18:46:50", "2023-10-14T18:48:12", "2023-10-14T18:49:36", "2023-10-14T18:50:39", "2023-10-14T18:55:41", "2023-10-14T18:56:25", "2023-10-14T18:57:51", "2023-10-14T18:59:09", "2023-10-14T19:00:33", "2023-10-14T19:01:54", "2023-10-14T19:03:13", "2023-10-14T19:04:37", "2023-10-14T20:37:30", "2023-10-14T23:07:01", "2023-10-14T23:07:58", "2023-10-14T23:09:18"]
 
    # Boulder location
    obs_lat = 39.995380
    obs_long = -105.262390
    alt = 1.6523

    set_geometry(boulder_october, obs_lat, obs_long, alt, 50, "boulder_october_N_50")
end

function icymoons()
    time_stamps = range(utc2et("2026-01-10T07:00:00.0"), utc2et.("2026-01-10T12:00:00.0"), step = 105.0)
    # NEID location
    obs_lat = 31.9583 
    obs_long = -111.5967  
    alt = 2.097938 

    set_geometry(time_stamps, obs_lat, obs_long, alt, 120, "icymoons")
end

icymoons()
#time stamps: not matching eclipse? step too large that eclipse missed? 
#grid: grid too large that occulted patches not determined? 